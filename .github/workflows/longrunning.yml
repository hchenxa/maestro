name: Long Running Test

on:
  pull_request:
    types: 
      - opened
      - reopened
      - synchronize
    branches:
      - main

jobs:
  init-env:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'
      contents: 'read'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Login to Azure using OIDC (no secret needed if federated identity is set up)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # if not using federated identity:
          # client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

        # Install kubelogin (needed for AAD-enabled clusters)
      - name: Install kubelogin
        run: |
          az aks install-cli
          kubelogin --version

        # Get AKS Service Cluster credentials
      - name: Get AKS Service Cluster credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.SVC_RESOURCE_GROUP }} \
            --name ${{ secrets.SVC_CLUSTER_NAME }} \
            --overwrite-existing \
            -f ./svc-cluster.kubeconfig

        # Get AKS Management Cluster credentials
      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.MGMT_RESOURCE_GROUP }} \
            --name ${{ secrets.MGMT_CLUSTER_NAME }} \
            --overwrite-existing \
            -f ./mgmt-cluster.kubeconfig

      # Convert kubeconfig for non-interactive login (GitHub runner)
      - name: Convert kubeconfig for kubelogin
        run: |
          kubelogin convert-kubeconfig -l azurecli --kubeconfig ./svc-cluster.kubeconfig
          kubelogin convert-kubeconfig -l azurecli --kubeconfig ./mgmt-cluster.kubeconfig

      # Verify kubectl works
      - name: Check cluster access
        run: |
          kubectl --kubeconfig ./svc-cluster.kubeconfig get nodes
          kubectl --kubeconfig ./mgmt-cluster.kubeconfig get nodes 
          kubectl --kubeconfig ./svc-cluster.kubeconfig -n maestro get pods
          kubectl --kubeconfig ./mgmt-cluster.kubeconfig -n maestro get pods

  e2e-test:
    runs-on: ubuntu-latest
    needs: init-env
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.23.0'
    # - name: Test
    #   run: |
    #     ginkgo -v --fail-fast --label-filter="!(e2e-tests-spec-resync-reconnect||e2e-tests-status-resync-reconnect)" \
    #     test/e2e/pkg